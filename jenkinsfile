node('jenkinsslave') {	
 stage('SCM Checkout'){
         git 'https://github.com/dileepgudivada/testing-examples'
   }
   stage('Compile-test'){
       // Get maven home path
       def mvnHome = tool name: 'maven-3', type: 'maven'
       sh "${mvnHome}/bin/mvn compile"
   }
   
   stage('SonarQube Analysis') {
        def mvnHome =  tool name: 'maven-3', type: 'maven'
        withSonarQubeEnv('sonarqube') { 
          sh "${mvnHome}/bin/mvn sonar:sonar"
        }
    }
    
    stage("Quality Gate"){
       timeout(time: 1, unit: 'HOURS') { // Just in case something goes wrong, pipeline will be killed after a timeout
         def qg = waitForQualityGate() // Reuse taskId previously collected by withSonarQubeEnv
	 if (qg.status != 'OK') {
	   error "Pipeline aborted due to quality gate failure: ${qg.status}"
         }   
       }
    }
    
    stage('Clean-Package'){
      // Get maven home path
      def mvnHome = tool name: 'maven-3', type: 'maven'   
      sh "${mvnHome}/bin/mvn package" 
    }
   
    stage('NexusDeploy'){
       // Get maven home path
       def mvnHome = tool name: 'maven-3.5.4' , type: 'maven'
       sh "${mvnHome}/opt/mvn deploy"
    }
    stage('Build Docker Image'){
      sh 'docker build -t dileep/myimage:0.0.1 .'
    }
    stage('Production'){
     sshagent(['tomcat']) {
       sh 'scp -o StrictHostKeyChecking=no target/*.war ubuntu@172.31.1.73:/opt/tomcat/webapps/'
     }
    }
    stage('Push to Docker Hub'){
	withCredentials([file(credentialsId: '', variable: 'mydocker')]) {
        sh "docker login -u dileepdevops8@gmail.com -p ${mydocker}"
     }
     sh 'docker build -t dileep/myimage:0.0.1 .'
   }  
}
